PROGRAM -> (STATEMENT | FUNCLIST )?

FUNCLIST -> FUNCDEFFUNCLIST | FUNCDEF

FUNCDEF -> ( int | float | string | tint | tfloat | tstring) def ident(PARAMLIST){ STATELIST }

PARAMLIST -> (( int | float | string | tint | tfloat | tstring) ident, PARAMLIST | ( int | float | string | tint | tfloat | tstring) ident)?

STATEMENT -> (VARDECL; |
ATRIBSTAT ; |
PRINTSTAT ; |
READSTAT ; |
RETURNSTAT ; |
IFSTAT |
FORSTAT |
{STATELIST } |
break ; |
;)

VARDECL -> (( int | float | string  ) ident ([int constant])∗) | ((tint | tfloat | tstring) ident [int constant])

ATRIBSTAT -> LVALULVALUEE = ( EXPRESSION | ALLOCEXPRESSION | FUNCCALL)

FUNCCALL -> ident(PARAMLISTCALL)

PARAMLISTCALL -> (ident, PARAMLISTCALL | ident)?

PRINTSTAT -> print EXPRESSION

READSTAT -> read LVALUE

RETURNSTAT -> return (EXPRESSION | ALLOCEXPRESSION | FUNCCALL)

IFSTAT -> if ( EXPRESSION ) STATEMENT (else STATEMENT )?

FORSTAT -> for(ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT

STATELIST -> STATEMENT (STATELIST)?

ALLOCEXPRESSION -> new (int | float | string | tint | tfloat | tstring) ([ NUMEXPRESSION ])+

EXPRESSION ->  BOOLANDEXPRESSION (or BOOLANDEXPRESSION)?

BOOLANDEXPRESSION ->  BOOLNOTEXPRESSION (and BOOLNOTEXPRESSION)?

BOOLNOTEXPRESSION -> (not)? BOOLOREXPRESSION

BOOLOREXPRESSION -> NUMEXPRESSION (( < | > | <= | >= | == | != ) NUMEXPRESSION)?

NUMEXPRESSION -> TERM ((+ |− ) TERM )∗

TERM -> UNARYEXPR(( ∗ | / | % ) UNARYEXPR)∗

UNARYEXPR -> (( + | − ))? FACTOR

FACTOR -> (int constant | float constant | string constant | null | LVALUE | ( EXPRESSION ))

LVALUE -> ident( [NUMEXPRESSION ] )∗
